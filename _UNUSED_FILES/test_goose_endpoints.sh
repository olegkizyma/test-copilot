#!/bin/bash

# =============================================================================
# Goose API Endpoints Tester
# =============================================================================
# –¢–µ—Å—Ç—É—î —Ä—ñ–∑–Ω—ñ API endpoints Goose Desktop –¥–ª—è –∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è —Ä–æ–±–æ—á–æ–≥–æ
# =============================================================================

set -e

# ANSI escape codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

GOOSE_PORT=51958
GITHUB_TOKEN="YOUR_GITHUB_TOKEN_HERE"

echo -e "${CYAN}ü¶Ü –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Goose Desktop API Endpoints${NC}"
echo -e "${CYAN}–ü–æ—Ä—Ç: ${GOOSE_PORT}${NC}"
echo ""

# –§—É–Ω–∫—Ü—ñ—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è endpoint
test_endpoint() {
    local method=$1
    local endpoint=$2
    local data=$3
    local description=$4
    
    echo -e "${BLUE}–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è: ${description}${NC}"
    echo -e "  ${method} http://localhost:${GOOSE_PORT}${endpoint}"
    
    if [ -n "$data" ]; then
        echo -e "  –î–∞–Ω—ñ: ${data}"
    fi
    
    # –¢–µ—Å—Ç –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
    echo -e "${YELLOW}  –ë–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:${NC}"
    if [ "$method" = "GET" ]; then
        response=$(curl -s -w "HTTP_%{http_code}" "http://localhost:${GOOSE_PORT}${endpoint}" 2>/dev/null || echo "HTTP_000")
    else
        response=$(curl -s -w "HTTP_%{http_code}" -X "$method" -H "Content-Type: application/json" -d "$data" "http://localhost:${GOOSE_PORT}${endpoint}" 2>/dev/null || echo "HTTP_000")
    fi
    
    status_code=$(echo "$response" | grep -o "HTTP_[0-9]*" | cut -d_ -f2)
    content=$(echo "$response" | sed 's/HTTP_[0-9]*$//')
    
    if [ "$status_code" = "200" ]; then
        echo -e "    ${GREEN}‚úÖ ${status_code}${NC} - ${content:0:100}..."
    elif [ "$status_code" = "401" ]; then
        echo -e "    ${YELLOW}üîí ${status_code}${NC} - –ü–æ—Ç—Ä–µ–±—É—î –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó"
    elif [ "$status_code" = "404" ]; then
        echo -e "    ${RED}‚ùå ${status_code}${NC} - Endpoint –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
    else
        echo -e "    ${RED}‚ùå ${status_code}${NC} - ${content:0:50}..."
    fi
    
    # –¢–µ—Å—Ç –∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—î—é
    echo -e "${YELLOW}  –ó GitHub —Ç–æ–∫–µ–Ω–æ–º:${NC}"
    if [ "$method" = "GET" ]; then
        response=$(curl -s -w "HTTP_%{http_code}" -H "Authorization: Bearer $GITHUB_TOKEN" "http://localhost:${GOOSE_PORT}${endpoint}" 2>/dev/null || echo "HTTP_000")
    else
        response=$(curl -s -w "HTTP_%{http_code}" -X "$method" -H "Authorization: Bearer $GITHUB_TOKEN" -H "Content-Type: application/json" -d "$data" "http://localhost:${GOOSE_PORT}${endpoint}" 2>/dev/null || echo "HTTP_000")
    fi
    
    status_code=$(echo "$response" | grep -o "HTTP_[0-9]*" | cut -d_ -f2)
    content=$(echo "$response" | sed 's/HTTP_[0-9]*$//')
    
    if [ "$status_code" = "200" ]; then
        echo -e "    ${GREEN}‚úÖ ${status_code}${NC} - ${content:0:100}..."
    elif [ "$status_code" = "401" ]; then
        echo -e "    ${YELLOW}üîí ${status_code}${NC} - –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –Ω–µ –ø—Ä–∞—Ü—é—î"
    elif [ "$status_code" = "404" ]; then
        echo -e "    ${RED}‚ùå ${status_code}${NC} - Endpoint –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
    else
        echo -e "    ${RED}‚ùå ${status_code}${NC} - ${content:0:50}..."
    fi
    
    echo ""
}

# –¢–µ—Å—Ç—É—î–º–æ —Ä—ñ–∑–Ω—ñ endpoints
test_endpoint "GET" "/" "–ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞"
test_endpoint "GET" "/health" "Health check"
test_endpoint "GET" "/api" "API info"
test_endpoint "GET" "/api/health" "API health"
test_endpoint "POST" "/api/chat" '{"message":"test"}' "Chat API"
test_endpoint "POST" "/api/v1/chat" '{"message":"test"}' "Chat API v1"
test_endpoint "POST" "/chat" '{"message":"test"}' "Direct chat"
test_endpoint "POST" "/v1/chat/completions" '{"model":"gpt-4o","messages":[{"role":"user","content":"test"}]}' "OpenAI compatible API"

echo -e "${CYAN}üîç –î–æ–¥–∞—Ç–∫–æ–≤–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:${NC}"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ WebSocket endpoints
echo -e "${BLUE}WebSocket endpoints:${NC}"
echo "  ws://localhost:${GOOSE_PORT}/ws"
echo "  ws://localhost:${GOOSE_PORT}/api/ws"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—ñ–≤ Goose
echo -e "${BLUE}Goose –ø—Ä–æ—Ü–µ—Å–∏:${NC}"
ps aux | grep -i goose | grep -v grep | while read line; do
    echo "  $line"
done

echo ""
echo -e "${CYAN}üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:${NC}"
echo "1. –Ø–∫—â–æ –≤—Å—ñ endpoints –ø–æ–≤–µ—Ä—Ç–∞—é—Ç—å 401 - –Ω–∞–ª–∞—à—Ç—É–π—Ç–µ Goose —á–µ—Ä–µ–∑ –≤–µ–±-—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
echo "2. –í—ñ–¥–∫—Ä–∏–π—Ç–µ http://localhost:${GOOSE_PORT} –≤ –±—Ä–∞—É–∑–µ—Ä—ñ"
echo "3. –ù–∞–ª–∞—à—Ç—É–π—Ç–µ GitHub Copilot –≤ Settings"
echo "4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç—ñ—Ç—å ATLAS –ø—ñ—Å–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è"
